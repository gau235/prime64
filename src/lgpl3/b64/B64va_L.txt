package lgpl3.b64;

import lgpl3.b32.B32va;

/**
 * @version 2020/02/17_17:00:00<br/>
 *          <a target="_blank" href="http://c64.tw/w20/o/searchDocOfSrc.jsp?nameOfClass=B64va_L" >B64va_L.java</a>
 *
 * @see B64va
 */
public abstract class B64va_L extends B64va_A {

	// private static final Class<?> THIS = B64va_L.class;

	/**
	 * 以 2 為底取 log.<br/>
	 * To log with base 2.
	 *
	 * @see B32va#log2(int)
	 *
	 * @see B32va#log2NPlus1(int)
	 */
	public static int log2(long b64As2Pow) {

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001L)
			return 0;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0010L)
			return 1;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0100L)
			return 2;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1000L)
			return 3;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001_0000L)
			return 4;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0010_0000L)
			return 5;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0100_0000L)
			return 6;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1000_0000L)
			return 7;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001_0000_0000L)
			return 8;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0010_0000_0000L)
			return 9;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0100_0000_0000L)
			return 10;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1000_0000_0000L)
			return 11;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001_0000_0000_0000L)
			return 12;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0010_0000_0000_0000L)
			return 13;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0100_0000_0000_0000L)
			return 14;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1000_0000_0000_0000L)
			return 15;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001_0000_0000_0000_0000L)
			return 16;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0010_0000_0000_0000_0000L)
			return 17;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0100_0000_0000_0000_0000L)
			return 18;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1000_0000_0000_0000_0000L)
			return 19;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001_0000_0000_0000_0000_0000L)
			return 20;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0010_0000_0000_0000_0000_0000L)
			return 21;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0100_0000_0000_0000_0000_0000L)
			return 22;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1000_0000_0000_0000_0000_0000L)
			return 23;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0001_0000_0000_0000_0000_0000_0000L)
			return 24;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0010_0000_0000_0000_0000_0000_0000L)
			return 25;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0100_0000_0000_0000_0000_0000_0000L)
			return 26;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_1000_0000_0000_0000_0000_0000_0000L)
			return 27;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0001_0000_0000_0000_0000_0000_0000_0000L)
			return 28;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0010_0000_0000_0000_0000_0000_0000_0000L)
			return 29;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0100_0000_0000_0000_0000_0000_0000_0000L)
			return 30;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_1000_0000_0000_0000_0000_0000_0000_0000L)
			return 31;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0001_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 32;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0010_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 33;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0100_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 34;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_1000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 35;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0001_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 36;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0010_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 37;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0100_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 38;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_1000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 39;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0001_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 40;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0010_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 41;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0100_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 42;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 43;

		if (b64As2Pow == 0b0000_0000_0000_0000_0001_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 44;

		if (b64As2Pow == 0b0000_0000_0000_0000_0010_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 45;

		if (b64As2Pow == 0b0000_0000_0000_0000_0100_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 46;

		if (b64As2Pow == 0b0000_0000_0000_0000_1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 47;

		if (b64As2Pow == 0b0000_0000_0000_0001_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 48;

		if (b64As2Pow == 0b0000_0000_0000_0010_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 49;

		if (b64As2Pow == 0b0000_0000_0000_0100_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 50;

		if (b64As2Pow == 0b0000_0000_0000_1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 51;

		if (b64As2Pow == 0b0000_0000_0001_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 52;

		if (b64As2Pow == 0b0000_0000_0010_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 53;

		if (b64As2Pow == 0b0000_0000_0100_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 54;

		if (b64As2Pow == 0b0000_0000_1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 55;

		if (b64As2Pow == 0b0000_0001_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 56;

		if (b64As2Pow == 0b0000_0010_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 57;

		if (b64As2Pow == 0b0000_0100_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 58;

		if (b64As2Pow == 0b0000_1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 59;

		if (b64As2Pow == 0b0001_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 60;

		if (b64As2Pow == 0b0010_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 61;

		if (b64As2Pow == 0b0100_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 62;

		// if (b64As2Pow == 0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L) return 63;

		throw new IllegalArgumentException("b64As2Pow=" + b64As2Pow);

	}

	/**
	 * 以 2 為底取 log.<br/>
	 * To log with base 2.
	 *
	 * @see #log2(long)
	 *
	 * @see B32va#log2(int)
	 *
	 * @see B32va#log2NPlus1(int)
	 */
	public static int log2NPlus1(long b64As2Pow) {

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001L)
			return 1;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0010L)
			return 2;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0100L)
			return 3;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1000L)
			return 4;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001_0000L)
			return 5;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0010_0000L)
			return 6;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0100_0000L)
			return 7;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1000_0000L)
			return 8;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001_0000_0000L)
			return 9;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0010_0000_0000L)
			return 10;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0100_0000_0000L)
			return 11;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1000_0000_0000L)
			return 12;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001_0000_0000_0000L)
			return 13;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0010_0000_0000_0000L)
			return 14;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0100_0000_0000_0000L)
			return 15;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1000_0000_0000_0000L)
			return 16;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001_0000_0000_0000_0000L)
			return 17;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0010_0000_0000_0000_0000L)
			return 18;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0100_0000_0000_0000_0000L)
			return 19;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1000_0000_0000_0000_0000L)
			return 20;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001_0000_0000_0000_0000_0000L)
			return 21;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0010_0000_0000_0000_0000_0000L)
			return 22;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0100_0000_0000_0000_0000_0000L)
			return 23;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1000_0000_0000_0000_0000_0000L)
			return 24;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0001_0000_0000_0000_0000_0000_0000L)
			return 25;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0010_0000_0000_0000_0000_0000_0000L)
			return 26;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0100_0000_0000_0000_0000_0000_0000L)
			return 27;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_1000_0000_0000_0000_0000_0000_0000L)
			return 28;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0001_0000_0000_0000_0000_0000_0000_0000L)
			return 29;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0010_0000_0000_0000_0000_0000_0000_0000L)
			return 30;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_0100_0000_0000_0000_0000_0000_0000_0000L)
			return 31;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0000_1000_0000_0000_0000_0000_0000_0000_0000L)
			return 32;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0001_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 33;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0010_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 34;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_0100_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 35;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0000_1000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 36;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0001_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 37;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0010_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 38;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_0100_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 39;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0000_1000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 40;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0001_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 41;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0010_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 42;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_0100_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 43;

		if (b64As2Pow == 0b0000_0000_0000_0000_0000_1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 44;

		if (b64As2Pow == 0b0000_0000_0000_0000_0001_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 45;

		if (b64As2Pow == 0b0000_0000_0000_0000_0010_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 46;

		if (b64As2Pow == 0b0000_0000_0000_0000_0100_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 47;

		if (b64As2Pow == 0b0000_0000_0000_0000_1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 48;

		if (b64As2Pow == 0b0000_0000_0000_0001_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 49;

		if (b64As2Pow == 0b0000_0000_0000_0010_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 50;

		if (b64As2Pow == 0b0000_0000_0000_0100_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 51;

		if (b64As2Pow == 0b0000_0000_0000_1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 52;

		if (b64As2Pow == 0b0000_0000_0001_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 53;

		if (b64As2Pow == 0b0000_0000_0010_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 54;

		if (b64As2Pow == 0b0000_0000_0100_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 55;

		if (b64As2Pow == 0b0000_0000_1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 56;

		if (b64As2Pow == 0b0000_0001_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 57;

		if (b64As2Pow == 0b0000_0010_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 58;

		if (b64As2Pow == 0b0000_0100_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 59;

		if (b64As2Pow == 0b0000_1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 60;

		if (b64As2Pow == 0b0001_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 61;

		if (b64As2Pow == 0b0010_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 62;

		if (b64As2Pow == 0b0100_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L)
			return 63;

		// if (b64As2Pow == 0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000L) return 64;

		throw new IllegalArgumentException("b64As2Pow=" + b64As2Pow);

	}
}
